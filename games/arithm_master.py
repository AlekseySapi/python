import random

line = '\n================ ================ ================'

def get_random_number(digits):
    ch = random.choices([1, 2], [7, 3], k=1)[0]	# 70% - –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—ã–±–æ—Ä–∞ 1
    if ch == 1:
        return random.randint(2, 10**digits - 1)
    else:
        return random.randint(2, 9)

def generate_expression(digits, op_choice):
    if op_choice == '1':
        operations = ['+', '-', '*', '/']
        w = [55, 25, 15, 5]
    else:
        operations = ['+', '-', '*']
        w = [55, 25, 20]
    op1, op2, op3 = random.choices(operations, weights=w, k=3)

    num1, num2, num3, num4 = get_random_number(digits), get_random_number(digits), get_random_number(digits), get_random_number(digits)

    expr = f"{num1} {op1} {num2} {op2} {num3} {op3} {num4}"
    correct_result = round(eval(expr), 2)

    return expr, correct_result

def main():
    print('\n–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∏')
    print('\n(–ø—Ä–∏ –¥–µ–ª–µ–Ω–∏–∏  ->  –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ —Å–æ—Ç—ã—Ö)')
    print('\n\n –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –≤–≤–µ–¥–∏—Ç–µ ->  q\n')
    print(' –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ ->  pass\n')
    while True:
        print(line)
        print('  1 - –î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–µ–ª–µ–Ω–∏—è, 2 - –ë–µ–∑ –Ω–∏—Ö')
        op_choice = ''
        s = ''
        while op_choice not in ('1', '2'):
            s += '>'
            op_choice = input(f'{s} ').strip()
        digits = 1
        correct_answers = 0
        keep_playing = True
        while keep_playing:
            expr, correct_result = generate_expression(digits, op_choice)
            print(line)

            while True:
                user_answer = input(f'   {expr} = ').replace(',', '.')
                if user_answer.lower() == 'q':
                    keep_playing = False
                    print()
                    break
                if user_answer.lower() == 'pass':
                    print(f'\n –û—Ç–≤–µ—Ç: {correct_result}\n')
                    correct_answers -= 1
                    break

                try:
                    if float(user_answer) == correct_result:
                        print('‚úÖ –í–µ—Ä–Ω–æ!')
                        correct_answers += 1
                        # print(f'\n correct_answers = {correct_answers}\n')
                        break
                    else:
                        print('‚ùå –ù–µ–≤–µ—Ä–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n')
                        correct_answers -= 1
                        # print(f'( correct_answers = {correct_answers} )\n')
                except ValueError:
                    print('‚ö†Ô∏è  –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!\n')

            if (correct_answers > 0) and (correct_answers % 3 == 0):
                digits += 1
                correct_answers = 0
                print(f'\nüî• –ü—Ä–µ–¥–µ–ª –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —á–∏—Å–µ–ª –ø–æ–≤—ã—à–µ–Ω –¥–æ {10**digits - 1}!')

if __name__ == "__main__":
    main()