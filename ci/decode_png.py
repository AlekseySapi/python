import os
from PIL import Image

line = '\n################# ################# ################# #################'
line2 = '\n################# ################# #################'
stop_symb = '00000000'  # –°—Ç–æ–ø-—Å–∏–º–≤–æ–ª


def decode_text_from_png(input_file, text_file, choice):
    img = Image.open(input_file)
    pixels = img.load()

    width, height = img.size
    binary_text = ""

    if choice == '1':
        for y in range(height):
            for x in range(width):
                r, g, b = pixels[x, y] if img.mode == 'RGB' else pixels[x, y][:3]
                binary_text += str(r & 1) + str(g & 1) + str(b & 1)
    elif choice == '2':
        for y in range(height):
            for x in range(width - 1, -1, -1):
                r, g, b = pixels[x, y] if img.mode == 'RGB' else pixels[x, y][:3]
                binary_text += str(r & 1) + str(g & 1) + str(b & 1)
    elif choice == '3':
        for y in range(height - 1, -1, -1):
            for x in range(width):
                r, g, b = pixels[x, y] if img.mode == 'RGB' else pixels[x, y][:3]
                binary_text += str(r & 1) + str(g & 1) + str(b & 1)
    elif choice == '4':
        for y in range(height - 1, -1, -1):
            for x in range(width - 1, -1, -1):
                r, g, b = pixels[x, y] if img.mode == 'RGB' else pixels[x, y][:3]
                binary_text += str(r & 1) + str(g & 1) + str(b & 1)
    elif choice == '5':
        for x in range(width):  
            for y in range(height):
                r, g, b = pixels[x, y] if img.mode == 'RGB' else pixels[x, y][:3]
                binary_text += str(r & 1) + str(g & 1) + str(b & 1)
    elif choice == '6':
        for x in range(width):  
            for y in range(height - 1, -1, -1):
                r, g, b = pixels[x, y] if img.mode == 'RGB' else pixels[x, y][:3]
                binary_text += str(r & 1) + str(g & 1) + str(b & 1)
    elif choice == '7':
        for x in range(width - 1, -1, -1):  
            for y in range(height):
                r, g, b = pixels[x, y] if img.mode == 'RGB' else pixels[x, y][:3]
                binary_text += str(r & 1) + str(g & 1) + str(b & 1)
    elif choice == '8':
        for x in range(width - 1, -1, -1):  
            for y in range(height - 1, -1, -1):
                r, g, b = pixels[x, y] if img.mode == 'RGB' else pixels[x, y][:3]
                binary_text += str(r & 1) + str(g & 1) + str(b & 1)

    byte_array = []
    for i in range(0, len(binary_text), 8):
        byte = binary_text[i:i+8]
        if byte == stop_symb:   # –°—Ç–æ–ø-—Å–∏–º–≤–æ–ª
            break
        byte_array.append(int(byte, 2))

    try:
        secret_text = bytes(byte_array).decode('utf-8')  # –î–µ–∫–æ–¥–∏—Ä—É–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å—Ç—Ä–æ–∫—É
        with open(text_file, 'a', encoding='utf-8') as file:
            # file.write("\n\n\n======= ======= =======\n")
            file.write(secret_text)
        print("\nüîç –¢–µ–∫—Å—Ç –Ω–∞–π–¥–µ–Ω –∏ –∑–∞–ø–∏—Å–∞–Ω –≤ —Ñ–∞–π–ª!\n")
        print(line2)
    except UnicodeDecodeError:
        print("\n‚ö†Ô∏è  –¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.\n")


def main():
    print(line)
    print(" < 8 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ–±—Ö–æ–¥–∞ –ø–∏–∫—Å–µ–ª–µ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è >\n\n [1] ‚û°Ô∏è  ‚¨áÔ∏è    | [2] ‚¨ÖÔ∏è  ‚¨áÔ∏è    | [3] ‚û°Ô∏è  ‚¨ÜÔ∏è    | [4] ‚¨ÖÔ∏è  ‚¨ÜÔ∏è    - –ø–æ —Å—Ç—Ä–æ–∫–∞–º\n [5] ‚¨áÔ∏è  ‚û°Ô∏è    | [6] ‚¨ÜÔ∏è  ‚û°Ô∏è    | [7] ‚¨áÔ∏è  ‚¨ÖÔ∏è    | [8] ‚¨ÜÔ∏è  ‚¨ÖÔ∏è    - –ø–æ —Å—Ç–æ–ª–±—Ü–∞–º\n")
    while True:
        print(line2)
        while True:
            file = input("# –í–≤–µ–¥–∏—Ç–µ –∏–º—è PNG-—Ñ–∞–π–ª–∞:\n> ")
            if not os.path.isfile(file):
                print("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.\n")
            else:
                break

        filename, ext = os.path.splitext(file)
        if ext.lower() != ".png":
            print("\n‚ö†Ô∏è  –û—à–∏–±–∫–∞: –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ PNG-—Ñ–∞–π–ª—ã.")
            continue
        
        print()
        while True:
            text_file = input("# –í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:\n> ")
            if not os.path.isfile(text_file):
                with open(text_file, 'w') as f:
                    pass
                break
            else:
                break

        while True:
            choice = ''
            while choice not in ('q', '1', '2', '3', '4', '5', '6', '7', '8'):
                choice = input("\n  < –û–±—Ö–æ–¥ >  [ q - –ß–∏—Ç–∞—Ç—å –Ω–æ–≤—ã–π —Ñ–∞–π–ª ]\n  1 - ‚û°Ô∏è  ‚¨áÔ∏è    2 - ‚¨ÖÔ∏è  ‚¨áÔ∏è    3 - ‚û°Ô∏è  ‚¨ÜÔ∏è    4 - ‚¨ÖÔ∏è  ‚¨ÜÔ∏è\n  5 - ‚¨áÔ∏è  ‚û°Ô∏è    6 - ‚¨ÜÔ∏è  ‚û°Ô∏è    7 - ‚¨áÔ∏è  ‚¨ÖÔ∏è    8 - ‚¨ÜÔ∏è  ‚¨ÖÔ∏è\n> ")
            if choice == 'q':
                print()
                break
            decode_text_from_png(file, text_file, choice)


if __name__ == "__main__":
    main()