# –®–∏—Ñ—Ä –¶–µ–∑–∞—Ä—è

import pyperclip

line = "\n####### ####### ####### ####### #######\n# [–®–∏—Ñ—Ä –¶–µ–∑–∞—Ä—è (–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å–¥–≤–∏–≥: 3)]\n"


def caesar_cipher(text, shift, language, alphabet):
    if language != 'hebr' or language != 'phnx' or language != 'arab' or language != 'rune':
        lower_alphabet = alphabet.lower()
        result = []
        for char in text:
            if char in lower_alphabet:
                idx = lower_alphabet.index(char)
                new_idx = idx + shift
                result.append(lower_alphabet[new_idx % len(lower_alphabet)])
            elif char in alphabet:
                idx = alphabet.index(char)
                new_idx = idx + shift
                result.append(alphabet[new_idx % len(alphabet)])
            else:
                result.append(char)  # –ü—Ä–æ–ø—É—Å–∫ —Å–∏–º–≤–æ–ª–æ–≤, –Ω–µ –≤—Ö–æ–¥—è—â–∏—Ö –≤ –∞–ª—Ñ–∞–≤–∏—Ç
    else:
        result = []
        for char in text:
            if char in alphabet:
                idx = alphabet.index(char)
                new_idx = idx + shift
                result.append(alphabet[new_idx % len(alphabet)])
            else:
                result.append(char)  # –ü—Ä–æ–ø—É—Å–∫ —Å–∏–º–≤–æ–ª–æ–≤, –Ω–µ –≤—Ö–æ–¥—è—â–∏—Ö –≤ –∞–ª—Ñ–∞–≤–∏—Ç
    return ''.join(result)


def detect_language(text):
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ —Ç–µ–∫—Å—Ç–∞
    if any('–∞' <= char <= '—è' or '–ê' <= char <= '–Ø' for char in text):
        return 'ru'
    elif any('a' <= char <= 'z' or 'A' <= char <= 'Z' for char in text):
        return 'en'
    elif any('Œ±' <= char <= 'œâ' or 'Œë' <= char <= 'Œ©' for char in text):
        return 'greek'
    elif any('◊ê' <= char <= '◊™' for char in text):
        return 'hebr'
    elif any('ê§Ä' <= char <= 'ê§ï' for char in text):
        return 'phnx'
    elif any('·ö†' <= char <= '·õû' for char in text):
        return 'rune'
    elif any('ÿ£' <= char <= 'ÿ∫' for char in text):
        return 'arab'
    else:
        return None
    


def main():
    print(line)
    while True:
        original_text = input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:\n> ").strip()

        language = detect_language(original_text)
        if not language:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —è–∑—ã–∫ —Ç–µ–∫—Å—Ç–∞.")
            return
        

        if language == 'ru':
            alphabet = '–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø'
        elif language == 'en':
            alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
        elif language == 'greek':
            alphabet = 'ŒëŒíŒìŒîŒïŒñŒóŒòŒôŒöŒõŒúŒùŒûŒüŒ†Œ°Œ£Œ§Œ•Œ¶ŒßŒ®Œ©'
        elif language == 'hebr':
            alphabet = '◊ê◊ë◊í◊ì◊î◊ï◊ñ◊ó◊ò◊ô◊õ◊ú◊û◊†◊°◊¢◊§◊¶◊ß◊®◊©◊™'
        elif language == 'phnx':
            alphabet = 'ê§Äê§Åê§Çê§Éê§Ñê§Öê§Üê§áê§àê§âê§äê§ãê§åê§çê§éê§èê§êê§ëê§íê§ìê§îê§ï'
        elif language == 'arab':
            alphabet = 'ÿ£ÿ®ÿ¨ÿØÔª©Ÿàÿ≤ÿ≠ÿ∑ŸäŸÉŸÑŸÖŸÜÿ≥ÿπŸÅÿµŸÇÿ±ÿ¥ÿ™ÿ´ÿÆÿ∞ÿ∂ÿ∏ÿ∫'
        elif language == 'rune':
            alphabet = '·ö†·ö¢·ö¶·ö®·ö±·ö≤·ö∑·öπ·ö∫·öæ·õÅ·õÉ·õà·õá·õâ·õä·õè·õí·õñ·õó·õö·õú·õü·õû'
            

        while True:
            choice2 = input("\n  1 - –ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å, 2 - –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å:\n> ")
            if choice2 == "1" or choice2 == "2":
                break

        if choice2 == "1":
            while True:
                shift = input(">> –ù–∞ —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ —Å–¥–≤–∏–Ω—É—Ç—å? ").strip()
                if shift.lstrip('-').isdigit():
                    shift = int(shift)
                    sh = shift
                    break
        if choice2 == "2":
            while True:
                shift = input(">> –ö–∞–∫–æ–π —Å–¥–≤–∏–≥ –±—ã–ª —É —à–∏—Ñ—Ä–∞? ").strip()
                if shift.lstrip('-').isdigit():
                    shift = int(shift)
                    shift *= -1
                    sh = shift
                    break


        shift %= len(alphabet)

        encrypted_text = caesar_cipher(original_text, shift, language, alphabet)

        if sh == shift:
            print(f"\n–®–∏—Ñ—Ä –¶–µ–∑–∞—Ä—è [–°–¥–≤–∏–≥ –Ω–∞ {sh}]:\n> {encrypted_text}")
        else:
            print(f"\n–®–∏—Ñ—Ä –¶–µ–∑–∞—Ä—è [–°–¥–≤–∏–≥ –Ω–∞ {sh} ({shift})]:\n> {encrypted_text}")
        pyperclip.copy(encrypted_text)

        print("\n>> –¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞.\n")

        print(line)
        


if __name__ == "__main__":
    main()