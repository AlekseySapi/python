# –®–∏—Ñ—Ä –ê—Ç–±–∞—à

import os

line = "\n####### ####### ####### ####### #######\n# [–®–∏—Ñ—Ä –ê—Ç–±–∞—à]\n#"


def atbash(text, language, alphabet):
    if language == 'hebr' or language == 'phnx' or language == 'arab' or language == 'rune':
        # –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∞–ª—Ñ–∞–≤–∏—Ç
        reverse_alphabet = alphabet[::-1]

        # –ú–∞–ø–ø–∏–Ω–≥ –±—É–∫–≤ –∞–ª—Ñ–∞–≤–∏—Ç–∞ –Ω–∞ –∏—Ö –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–µ
        translation = str.maketrans(alphabet, reverse_alphabet)
    else:
        lower_alphabet = alphabet.lower()

        # –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∞–ª—Ñ–∞–≤–∏—Ç
        reverse_alphabet = alphabet[::-1]
        reverse_lower_alphabet = lower_alphabet[::-1]
    
        # –ú–∞–ø–ø–∏–Ω–≥ –±—É–∫–≤ –∞–ª—Ñ–∞–≤–∏—Ç–∞ –Ω–∞ –∏—Ö –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–µ
        translation = str.maketrans(alphabet + lower_alphabet, reverse_alphabet + reverse_lower_alphabet)
    
    return text.translate(translation)


def detect_language(text):
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ —Ç–µ–∫—Å—Ç–∞
    if any('–∞' <= char <= '—è' or '–ê' <= char <= '–Ø' for char in text):
        return 'ru'
    elif any('a' <= char <= 'z' or 'A' <= char <= 'Z' for char in text):
        return 'en'
    elif any('Œ±' <= char <= 'œâ' or 'Œë' <= char <= 'Œ©' for char in text):
        return 'greek'
    elif any('◊ê' <= char <= '◊™' for char in text):
        return 'hebr'
    elif any('ê§Ä' <= char <= 'ê§ï' for char in text):
        return 'phnx'
    elif any('·ö†' <= char <= '·õû' for char in text):
        return 'rune'
    elif any('ÿ£' <= char <= 'ÿ∫' for char in text):
        return 'arab'
    else:
        return None
    


def main():
    print(line)
    while True:
        file_path = input("# –í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É:\n> ").strip()
        if not os.path.exists(file_path):
            print("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        else:
            break

    with open(file_path, 'r', encoding='utf-8') as file:
        original_text = file.read()

    language = detect_language(original_text)
    if not language:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —è–∑—ã–∫ —Ç–µ–∫—Å—Ç–∞.")
        return
    
    print(f"–Ø–∑—ã–∫ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –∫–∞–∫ -> [{language}]")

    if language == 'ru':
        alphabet = '–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø'
    elif language == 'en':
        alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    elif language == 'greek':
        alphabet = 'ŒëŒíŒìŒîŒïŒñŒóŒòŒôŒöŒõŒúŒùŒûŒüŒ†Œ°Œ£Œ§Œ•Œ¶ŒßŒ®Œ©'
    elif language == 'hebr':
        alphabet = '◊ê◊ë◊í◊ì◊î◊ï◊ñ◊ó◊ò◊ô◊õ◊ú◊û◊†◊°◊¢◊§◊¶◊ß◊®◊©◊™'
    elif language == 'phnx':
        alphabet = 'ê§Äê§Åê§Çê§Éê§Ñê§Öê§Üê§áê§àê§âê§äê§ãê§åê§çê§éê§èê§êê§ëê§íê§ìê§îê§ï'
    elif language == 'arab':
        alphabet = 'ÿ£ÿ®ÿ¨ÿØÔª©Ÿàÿ≤ÿ≠ÿ∑ŸäŸÉŸÑŸÖŸÜÿ≥ÿπŸÅÿµŸÇÿ±ÿ¥ÿ™ÿ´ÿÆÿ∞ÿ∂ÿ∏ÿ∫'
    elif language == 'rune':
        alphabet = '·ö†·ö¢·ö¶·ö®·ö±·ö≤·ö∑·öπ·ö∫·öæ·õÅ·õÉ·õà·õá·õâ·õä·õè·õí·õñ·õó·õö·õú·õü·õû'
        

    
    while True:

        while True:
            choice = input("  1 - –ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å, 2 - –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å:\n> ")
            if choice == "1" or choice == "2":
                break
        
        encrypted_text = atbash(original_text, language, alphabet)

        with open(file_path, 'a', encoding='utf-8') as file:
            file.write("\n\n=== === ===\n")
            file.write(encrypted_text)

        print("–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ñ–∞–π–ª.")
        print(line)
        


if __name__ == "__main__":
    main()